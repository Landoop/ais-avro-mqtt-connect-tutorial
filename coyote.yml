- name: coyote
  title: MQTT - Kafka Connect

- name: Setup Containers
  entries:
    - name: Docker Compose Build
      command: docker-compose -p mqttconnect build
    - name: Docker Compose Up
      command: docker-compose -p mqttconnect up -d
    - name: Sleep a bit
      command: sleep 60
      nolog: true
    - name: Check docker compose log
      command: docker-compose -p mqttconnect logs
      stdout_has: [ 'INFO success: broker entered RUNNING state' ]
      stdout_not_has: [ 'INFO exited: broker' ]

- name: Setup MQTT (ActiveMQ) Connector
  entries:
    - name: Create Kafka Topic
      command: >
        docker run --rm --network=mqttconnect_default landoop/fast-data-dev
          kafka-topics --zookeeper fast-data-dev:2181 --topic position-reports --partition 1 --replication 1 --create
    - name: Create a MQTT Distributed Connector
      command: >
        docker exec -i mqttconnect_fast-data-dev_1
          curl -vs --stderr - -X POST -H "Content-Type: application/json"
               --data @-
               "http://fast-data-dev:8083/connectors"
      stdout_not_has: [ 'HTTP/1.1 [45][0-9][0-9] ' ]
      stdin: |
        {
          "name": "mqtt-source",
          "config": {
            "connector.class": "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector",
            "tasks.max": "1",
            "topics": "position-reports",
            "connect.mqtt.connection.clean": "true",
            "connect.mqtt.connection.timeout": "1000",
            "connect.mqtt.source.kcql": "INSERT INTO position-reports SELECT * FROM /ais",
            "connect.mqtt.connection.keep.alive": "1000",
            "connect.mqtt.source.converters": "/ais=com.datamountaineer.streamreactor.connect.converters.source.AvroConverter",
            "connect.source.converter.avro.schemas": "/ais=/classAPositionReportSchema.json",
            "connect.mqtt.client.id": "ais-mqtt-connect-01",
            "connect.mqtt.converter.throw.on.error": "true",
            "connect.mqtt.hosts": "tcp://activemq:1883",
            "connect.mqtt.service.quality": "1"
          }
        }
    - command: sleep 30
      nolog: true
    - name: Run ais-mqtt to produce AIS messages into MQTT broker
      command: >
        time -p docker exec mqttconnect_fast-data-dev_1 ais-mqtt
                      -server activemq:1883 -origin /ais -schema /classAPositionReportSchema.json
                      -nmea /opt/go/src/landoop/ais-mqtt/nmea-sample -messages 100000
                      -workers 64

- name: Verify Connector
  entries:
    - command: sleep 30
      nolog: true
    - name: Read Entries from Topic
      command: >
        timeout 30
        docker exec mqttconnect_fast-data-dev_1
          kafka-avro-console-consumer --bootstrap-server fast-data-dev:9092
                                      --topic position-reports
                                      --from-beginning
                                      --new-consumer
                                      --max-messages 10
                                      --property schema.registry.url=http://fast-data-dev:8081
      ignore_exit_code: true
      stdout_has: [ '{"Type":', "Accuracy", "Timestamp" ]

- name: Clean-up Containers
  entries:
    - name: Docker Compose Down
      command: docker-compose -p mqttconnect down
